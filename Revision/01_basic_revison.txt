// git 
// js 

//working in the industry is always a team work 

// you can not the traditional sources of sharing data 



// GIT   -- git is software which is version control software 
//GITHUB -- github website which used to host your code (storing code ) it is hosting platform 

// bitbucket , gitlab , azure repo 

// GIT --> 

// for better management git has layers (enviornments)

// local --> work done on you personally computer

// stagging  --> area between local and production ( this a aera where we can check our chaanges )

// production --> this is a github  website env where you can see your changes 

//------------------------
// what is git
// what is github 
// why git/github
//what are the different 

//----------------------------

 // how create create a github account 
 // you have create your github with your work email 
 
 // what is repositorty and how to create it 

 what is repo -->
 repo a placer or a unique location where we can store our code 
 example - its simlair to storing your code in to a proper


 // note repo cannot be created using terminal command you have to do it by ui

// how to create a repositorty

// step go to your github account at top right corner click on + button 
// step2 select new reporsitory option 
// step3  you will a info form 
// enter the detials 



 // how clone a repositorty--> 
 clone -> to get a copy of that  reporsitory into your local

// how to clone your repo 

to clone a repo you have to use a command

git clone " clone url"



// task --> 
// 1 create your github account with your work email 
//2 create your own repo  send the link on the group 
//3 clone the source code batch4 into pc 



// -----------------------------------> 
to add files to  new repo 


echo "# Demo_12" >> README.md
git init                                                                 -- this initalizes your repostiory 
git add .                                                                  -- this command will add your files to the stagging area
git commit -m "first commit"                                                -- this command will make your files ready to show on github
git branch -M main                                                           -- this command creates a  main or master
git remote add origin https://github.com/SourceCode-code/Demo_12.git           -- this commands bind your ;local with the github repo url
git push -u origin main                                                         -- this command will push your changes to github



how to push the update changes 


git add .                           -- this command will add your files to the stagging area
git commit -m "message"             -- this command will make your files ready to show on github
git push origin main                --this command will push your changes to github




// task --

//1 the repo you have created add file  named as - hello 
and add some changes and push to repo 

// 2 create new name second -> introdutrcion 
push this intro to the same repo





// send me your github email  and github user name -->


//Branching and pr 

// what actual work flow --> 

imagine if you have 4 members --> qa 

---------------------main ---------------------------------------



// rushi  ----- testcase 
//sid --- testcase
//vaibhav -- testcase



---------------------main ---------------------------------------
             |                 |           |
//--------------------Reviewing or pr ------------------
          |    |           |    |     |     |          
        siddhant          vaibhav     rushi 



// the use of braching startgety 

// your main branch is always at a optimal condition
// you will any any confilcts or iisues in main branch 
// this also give you a chance to you work 


// in acutal this consist of steps as 

1 create a branch  -->
2 make your changes and push the changes to the branch -->
3 you have raise a pr  ( pull request )


// step 1 create a branch 

// ensure before creating branch you hit 2 commands 
//  git fetch  -> only sync the newly create data with your local git ( not download)  
// git pull origin main --> we will acutally get the update code to our local
//  git checkout -b branchname   --> this will  create a new  branch 

// example -- of demo branch 


// now to raise a pull request you have to do it on the github ui. 

// if you want to switch to another barnch you will need to enter command 

git checkout branchname